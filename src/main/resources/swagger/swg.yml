---
openapi: 3.0.1
info:
  title: Human cloning API
  description: API for creating clone who will fight in the clones wars
  contact:
    name: LE TUTOUR Erwan
    url: https://github.com/ErwanLT
    email: erwanletutour.elt@gmail.com
  license:
    name: MIT Licence
    url: https://opensource.org/licenses/mit-license.php
  version: '2.0'
servers:
  - url: http://localhost:8080/
    description: Generated server url
paths:
  "/kamino/clones/order66":
    put:
      tags:
        - human-cloning-controller
      operationId: executeOrder66
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Clone"
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: object
  "/kamino/clones":
    get:
      tags:
        - human-cloning-controller
      summary: Find all clones
      description: Find all clones present in database.
      operationId: findAll
      responses:
        '200':
          description: found clones
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Clone"
        '404':
          description: No clones found
          content: {}
    post:
      tags:
        - human-cloning-controller
      summary: Create a clone
      description: Create a clone with the information of the body.
      operationId: createClone
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Clone"
        required: true
      responses:
        '200':
          description: Clone created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Clone"
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: object
        '500':
          description: An error occured.
  "/kamino/clones/{id}":
    get:
      tags:
        - human-cloning-controller
      summary: Find one clone
      description: Find a clone by it's ID
      operationId: findById
      parameters:
        - name: The clone ID
          in: path
          required: true
          schema:
            type: integer
            format: int64
          example: 12
      responses:
        '200':
          description: Clone found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Clone"
        '404':
          description: No clones found
          content: {}
    delete:
      tags:
        - human-cloning-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: object
  "/kamino/clones/jedi":
    get:
      tags:
        - human-cloning-controller
      operationId: getAllJedi
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Jedi"
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: object
  "/kamino/clones/generateQR/{id}":
    get:
      tags:
        - human-cloning-controller
      operationId: generateQRCode
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: array
                items:
                  type: string
                  format: byte
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: object
components:
  schemas:
    Clone:
      required:
        - codeName
        - type
      type: object
      properties:
        id:
          type: integer
          description: The generated ID when saved in database
          format: int64
        brithPlace:
          maxLength: 40
          minLength: 3
          type: string
          description: The clone code name
          example: Kamino
        codeName:
          type: string
          description: The clone code name
        type:
          type: string
          description: The clone specialisation
          enum:
            - flametrooper
            - medic
            - gunner
            - scoot
            - jetpack
        platoon:
          type: integer
          description: The clone's platoon
          format: int32
          example: 501
        affilation:
          maxLength: 40
          minLength: 3
          type: string
          description: The clone affilation
          example: Galactic Republic
    Jedi:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        rank:
          type: string
